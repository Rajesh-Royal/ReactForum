{"version":3,"sources":["Forum1.js","Toggle.js","ForumComponents.js","App.js","serviceWorker.js","index.js"],"names":["Forum1","props","state","heading","this","setState","className","to","action","type","id","name","placeholder","value","Component","Toggle","class","ForumComponents","App","exact","path","component","Boolean","window","location","hostname","match","ReactDom","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.40f5106c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './style.css'\r\nimport 'animate.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Forum1 extends Component {\r\n\r\n    constructor(props) {\r\n        //let currentComponent = this;\r\n        super(props);\r\n        this.state = {\r\n            heading: \"Hello, This Is my first react Project :)\"\r\n        }\r\n    }\r\n    headchange() {\r\n        this.setState({\r\n            heading: \"Boom!\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            //root div\r\n            <div className=\"container\">\r\n                <div className=\"formbody\">\r\n                    <div className=\"heading\">\r\n                    <h3><Link to=\"/\"><i className=\"fa fa-arrow-left\"></i></Link>&nbsp;&nbsp;Become a writer</h3>\r\n                    </div>\r\n                \r\n                    <form action=\"#\">\r\n                        \r\n                        <input type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"First name\"></input>\r\n\r\n                        \r\n                        <input type=\"text\" id=\"\" name=\"lastname\" placeholder=\"Last name\"></input>\r\n                        <input type=\"text\" id=\"\" name=\"emailid\" placeholder=\"Email id\"></input>\r\n\r\n                        <input type=\"text\" id=\"\" name=\"phone\" placeholder=\"Phone no.\"></input>\r\n\r\n                        <input type=\"text\" id=\"\" name=\"shortbio\" placeholder=\"Short bio\"></input>\r\n\r\n                        <input type=\"text\" id=\"\" name=\"paytm\" placeholder=\"Paytm no.\"></input>\r\n                        <p className=\"terms\">8 smimple terms of being a writer on Candider ></p>\r\n\r\n\r\n                        <input type=\"submit\" value=\"Submit\"></input>\r\n                        <p className=\"terms2\">By submitting this form you are agreeing to the term</p>\r\n                        <button className=\"btn\">Connect us on WhatsApp</button>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Forum1;\r\n","import React, { Component } from 'react'\r\nimport './style.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Toggle extends Component {\r\n\r\n    constructor(props) {\r\n        //let currentComponent = this;\r\n        super(props);\r\n        this.state = {\r\n            heading: \"Hello, This Is my first react Project :)\"\r\n        }\r\n    }\r\n    headchange() {\r\n        this.setState({\r\n            heading: \"Boom!\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            //root div\r\n            <div className=\"container\">\r\n                <div className=\"formbody\">\r\n                    <div className=\"heading\">\r\n                        <h3><Link to=\"/\"><i className=\"fa fa-arrow-left\"></i></Link>&nbsp;&nbsp;Notefication Settings</h3>\r\n                    </div>\r\n\r\n                    <form action=\"#\">\r\n\r\n                        <p className=\"togglehead\">Customize the notifications by turning on or off as per your choice</p>\r\n                        <h3 className=\"togglesubhead\">Profile</h3>\r\n                        <div class=\"flex-container\">\r\n                            <div>\r\n                                <p className=\"toggleitems\">Follows</p>\r\n                            </div>\r\n                            <div>\r\n                                <label class=\"switch\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                    <span class=\"slider round\"></span>\r\n                                </label>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <h3 className=\"togglesubhead\">Blogs</h3>\r\n                        <div class=\"flex-container\">\r\n                            <div>\r\n                                <p className=\"toggleitems\">Blog updates</p>\r\n                            </div>\r\n                            <div>\r\n                                <label class=\"switch\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                    <span class=\"slider round\"></span>\r\n                                </label>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"flex-container\">\r\n                            <div>\r\n                                <p className=\"toggleitems\">Comments</p>\r\n                            </div>\r\n                            <div>\r\n                                <label class=\"switch\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                    <span class=\"slider round\"></span>\r\n                                </label>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"flex-container\">\r\n                            <div>\r\n                                <p className=\"toggleitems\">Likes</p>\r\n                            </div>\r\n                            <div>\r\n                                <label class=\"switch\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                    <span class=\"slider round\"></span>\r\n                                </label>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <h3 className=\"togglesubhead\">Forum</h3>\r\n                        <div class=\"flex-container\">\r\n                            <div>\r\n                                <p className=\"toggleitems\">General</p>\r\n                            </div>\r\n                            <div>\r\n                                <label class=\"switch\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                    <span class=\"slider round\"></span>\r\n                                </label>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"flex-container\">\r\n                            <div>\r\n                                <p className=\"toggleitems\">Comments</p>\r\n                            </div>\r\n                            <div>\r\n                                <label class=\"switch\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                    <span class=\"slider round\"></span>\r\n                                </label>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\"flex-container\">\r\n                            <div>\r\n                                <p className=\"toggleitems\">Likes</p>\r\n                            </div>\r\n                            <div>\r\n                                <label class=\"switch\">\r\n                                    <input type=\"checkbox\"></input>\r\n                                    <span class=\"slider round\"></span>\r\n                                </label>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Toggle;\r\n","import React, { Component } from 'react'\r\nimport Forum1 from './Forum1'\r\nimport Toggle from './Toggle'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport './style.css'\r\nimport 'animate.css'\r\n\r\n\r\nclass ForumComponents extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            heading: \"Hello, This Is my first react Project :)\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            //root div\r\n            <div>\r\n                <div className=\"containerhome\">\r\n                    <div className=\"row\">\r\n                        <Link to=\"/Forum1\">\r\n                            <button className=\"btnhome\">Forum1</button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <Link to=\"/Toggle\">\r\n                            <button className=\"btnhome\">Toggle</button>\r\n                        </Link>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ForumComponents;\r\n","import React, { Component } from 'react';\r\nimport Forum1 from './Forum1'\r\nimport Toggle from './Toggle'\r\nimport ForumComponents from './ForumComponents'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\n\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact path='/' component={ForumComponents} />\r\n                    <Route path='/Forum1' component={Forum1} />\r\n                    <Route path='/Toggle' component={Toggle} />\r\n                </Switch>\r\n\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDom from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\n\n\n\nReactDom.render(<App/>, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}